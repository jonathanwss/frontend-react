{"version":3,"sources":["Images/logo.svg","Components/Datatable/styles.ts","Components/Datatable/index.tsx","Components/Header/styles.ts","Components/Header/index.tsx","Pages/Posts/styles.ts","Services/api.ts","Pages/Posts/index.tsx","Pages/Users/styles.ts","Pages/Users/index.tsx","routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","GridTitle","styled","Grid","_templateObject","Object","taggedTemplateLiteral","h1","_templateObject2","DatatableHeader","attrs","container","_templateObject3","DatatableRow","_templateObject4","DatatableContainer","_templateObject5","DatatableItem","item","_templateObject6","Page","span","_templateObject7","PageSelected","_templateObject8","getItemSize","size","Datatable","_ref","data","columns","title","actionPrev","actionNext","actionSelectPage","actualPage","totalPages","react_default","a","createElement","sm","map","column","index","key","length","description","row","substring","style","color","fontSize","textAlign","onClick","Fragment","HeaderComponent","styles_templateObject","Logo","img","styles_templateObject2","Header","src","logoMoovin","PostsContainer","div","Posts_styles_templateObject","api","Axios","create","baseURL","Posts","_useState","useState","_useState2","slicedToArray","posts","setPosts","_useState3","_useState4","page","setPage","_useState5","_useState6","setTotalPages","getPosts","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","get","sent","meta","pagination","pages","stop","apply","this","arguments","useEffect","Components_Datatable","pageSelected","UsersContainer","Users_styles_templateObject","Users","users","setUsers","Routes","react_router_dom","Components_Header","react_router","exact","component","path","App","routes","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uQCQ3BC,GALYC,YAAOC,IAAPD,CAAHE,MAAAC,OAAAC,EAAA,EAAAD,CAAA,oEAKGH,IAAOK,GAAVC,MAAAH,OAAAC,EAAA,EAAAD,CAAA,4GAQTI,EAAkBP,YAAOC,KAAMO,MAAM,CAAEC,WAAW,GAAhCT,CAAHU,MAAAP,OAAAC,EAAA,EAAAD,CAAA,mZAgBfQ,EAAeX,YAAOC,KAAMO,MAAM,CAAEC,WAAW,GAAhCT,CAAHY,MAAAT,OAAAC,EAAA,EAAAD,CAAA,8TAaZU,EAAqBb,YAAOC,KAAMO,MAAM,CAAEC,WAAW,GAAhCT,CAAHc,MAAAX,OAAAC,EAAA,EAAAD,CAAA,qHAOlBY,EAAgBf,YAAOC,KAAMO,MAAM,CAAEQ,MAAM,GAA3BhB,CAAHiB,MAAAd,OAAAC,EAAA,EAAAD,CAAA,oDAKbe,EAAOlB,IAAOmB,KAAVC,MAAAjB,OAAAC,EAAA,EAAAD,CAAA,yHAQJkB,EAAerB,YAAOkB,EAAPlB,CAAHsB,MAAAnB,OAAAC,EAAA,EAAAD,CAAA,uFC9CnBoB,EAAc,SAACC,GACjB,OAAOA,GACH,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,EACX,KAAK,EACD,OAAO,EACX,KAAK,EACL,KAAK,EACD,OAAO,EACX,QACI,OAAO,IA2EJC,EAvEG,SAAAC,GAAuG,IAApGC,EAAoGD,EAApGC,KAAMC,EAA8FF,EAA9FE,QAASC,EAAqFH,EAArFG,MAAOC,EAA8EJ,EAA9EI,WAAYC,EAAkEL,EAAlEK,WAAYC,EAAsDN,EAAtDM,iBAAkBC,EAAoCP,EAApCO,WAAYC,EAAwBR,EAAxBQ,WAC7F,OACIC,EAAAC,EAAAC,cAACxB,EAAD,CAAoByB,GAAI,IACpBH,EAAAC,EAAAC,cAACtC,EAAD,KAAY8B,GACZM,EAAAC,EAAAC,cAAC9B,EAAD,KAEQqB,EAAQW,IAAK,SAACC,EAAQC,GAClB,OACIN,EAAAC,EAAAC,cAACtB,EAAD,CAAe2B,IAAKD,EAAOH,GAAIf,EAAYK,EAAQe,SAC9CH,EAAOI,gBAOxBjB,EAAKY,IAAI,SAAEM,EAAKJ,GACZ,OACIN,EAAAC,EAAAC,cAAC1B,EAAD,CAAc+B,IAAKD,GACdb,EAAQW,IAAI,SAACC,EAAQC,GAClB,OACIN,EAAAC,EAAAC,cAACtB,EAAD,CAAe2B,IAAKD,EAAOH,GAAIf,EAAYK,EAAQe,SAC9CE,EAAIL,EAAOE,KAAKC,OAAS,GAAKE,EAAIL,EAAOE,KAAKI,UAAU,EAAE,IAAI,MAAQD,EAAIL,EAAOE,WAQ9GP,EAAAC,EAAAC,cAAC1B,EAAD,KACIwB,EAAAC,EAAAC,cAACtB,EAAD,CAAegC,MAAO,CAAEC,MAAO,UAAWC,SAAU,IAAMX,GAAI,IAA9D,YACcX,EAAKgB,OADnB,cAGAR,EAAAC,EAAAC,cAACtB,EAAD,CAAegC,MAAO,CAAEC,MAAO,UAAWE,UAAW,SAAWZ,GAAI,GAChEH,EAAAC,EAAAC,cAACnB,EAAD,CAAM6B,MAAO,CAAEC,MAAsB,IAAff,EAAmB,UAAW,WAAakB,QAAS,WACnElB,EAAa,GACZH,MAFR,IAIU,KACLG,IAAeC,EAAa,GACzBC,EAAAC,EAAAC,cAACnB,EAAD,CAAMiC,QAAS,kBAAMnB,EAAiBC,EAAW,KAAKA,EAAY,GAGlEA,IAAeC,GACfC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgB,SAAA,KACIjB,EAAAC,EAAAC,cAACnB,EAAD,CAAMiC,QAAS,kBAAMnB,EAAiBC,EAAW,KAAKA,EAAY,GAClEE,EAAAC,EAAAC,cAACnB,EAAD,CAAMiC,QAAS,kBAAMnB,EAAiBC,EAAW,KAAKA,EAAY,IAG1EE,EAAAC,EAAAC,cAAChB,EAAD,CAAc8B,QAAS,kBAAMnB,EAAiBC,KAAcA,GAExDA,EAAaC,GACbC,EAAAC,EAAAC,cAACnB,EAAD,CAAMiC,QAAS,kBAAMnB,EAAiBC,EAAW,KAAKA,EAAY,GAIlEA,EAAaC,EAAY,GACrBC,EAAAC,EAAAC,cAACnB,EAAD,CAAMiC,QAAS,kBAAMnB,EAAiBC,EAAW,KAAKA,EAAY,GAE9EE,EAAAC,EAAAC,cAACnB,EAAD,CAAM6B,MAAO,CAAEC,MAAOf,IAAeC,EAAa,UAAW,WAAaiB,QAAS,WAC5ElB,EAAaC,GACZH,MAFR,IAIM,SChGbsB,EAAkBrD,YAAOC,IAAPD,CAAHsD,MAAAnD,OAAAC,EAAA,EAAAD,CAAA,sGAOfoD,EAAOvD,IAAOwD,IAAVC,MAAAtD,OAAAC,EAAA,EAAAD,CAAA,2FCEFuD,EATA,WACX,OACIvB,EAAAC,EAAAC,cAACgB,EAAD,CAAiBf,GAAI,IACjBH,EAAAC,EAAAC,cAACkB,EAAD,CAAMI,IAAKC,yCCJVC,EAAiB7D,IAAO8D,IAAVC,MAAA5D,OAAAC,EAAA,EAAAD,CAAA,sCCEZ6D,SAFHC,EAAMC,OAAO,CAACC,QAAQ,qCCE5BvC,EAAU,CAAC,CAACgB,YAAY,SAAUF,IAAK,SAAU,CAACE,YAAY,cAAYF,IAAK,SAoCtE0B,EAlCD,WACV,IAAAC,EAA0BC,mBAAS,IAAnCC,EAAApE,OAAAqE,EAAA,EAAArE,CAAAkE,EAAA,GAAOI,EAAPF,EAAA,GAAcG,EAAdH,EAAA,GACAI,EAAwBL,mBAAS,GAAjCM,EAAAzE,OAAAqE,EAAA,EAAArE,CAAAwE,EAAA,GAAOE,EAAPD,EAAA,GAAaE,EAAbF,EAAA,GACAG,EAAoCT,mBAAS,GAA7CU,EAAA7E,OAAAqE,EAAA,EAAArE,CAAA4E,EAAA,GAAO7C,EAAP8C,EAAA,GAAmBC,EAAnBD,EAAA,GAEME,EAAQ,eAAAxD,EAAAvB,OAAAgF,EAAA,EAAAhF,CAAAiF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACU3B,EAAI4B,IAAI,cAAcf,GADhC,OACPU,EADOE,EAAAI,KAEbnB,EAASa,EAAS5D,KAAKA,MACvBsD,EAAcM,EAAS5D,KAAKmE,KAAKC,WAAWC,OAH/B,wBAAAP,EAAAQ,SAAAX,MAAH,yBAAA5D,EAAAwE,MAAAC,KAAAC,YAAA,GAsBd,OARAC,oBAAU,WACNvB,EAAQ,IACT,IAEHuB,oBAAU,WACNnB,KACD,CAACL,IAGA1C,EAAAC,EAAAC,cAACwB,EAAD,KACI1B,EAAAC,EAAAC,cAACiE,EAAD,CAAWtE,iBAAkB,SAACuE,GAAD,OAA0BzB,EAAQyB,IAAerE,WAAYA,EAAYH,WAlB7F,WACb+C,EAAQD,EAAO,IAiBiH/C,WAdnH,WACbgD,EAAQD,EAAO,IAauI5C,WAAY4C,EAAMnC,IAAK,YAAab,MAAO,uBAAqBF,KAAM8C,EAAO7C,QAASA,MCjCvO4E,EAAiBxG,IAAO8D,IAAV2C,MAAAtG,OAAAC,EAAA,EAAAD,CAAA,8BCErByB,EAAU,CAAC,CAACgB,YAAY,OAAQF,IAAK,QAAS,CAACE,YAAY,SAAUF,IAAK,SAAU,CAAEE,YAAa,iBAAYF,IAAK,WAoC3GgE,EAlCD,WACV,IAAArC,EAA0BC,mBAAS,IAAnCC,EAAApE,OAAAqE,EAAA,EAAArE,CAAAkE,EAAA,GAAOsC,EAAPpC,EAAA,GAAcqC,EAAdrC,EAAA,GACAI,EAAwBL,mBAAS,GAAjCM,EAAAzE,OAAAqE,EAAA,EAAArE,CAAAwE,EAAA,GAAOE,EAAPD,EAAA,GAAaE,EAAbF,EAAA,GACAG,EAAoCT,mBAAS,GAA7CU,EAAA7E,OAAAqE,EAAA,EAAArE,CAAA4E,EAAA,GAAO7C,EAAP8C,EAAA,GAAmBC,EAAnBD,EAAA,GAEME,EAAQ,eAAAxD,EAAAvB,OAAAgF,EAAA,EAAAhF,CAAAiF,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAhD,EAAAoD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACU3B,EAAI4B,IAAI,cAAcf,GADhC,OACPU,EADOE,EAAAI,KAEbe,EAASrB,EAAS5D,KAAKA,MACvBsD,EAAcM,EAAS5D,KAAKmE,KAAKC,WAAWC,OAH/B,wBAAAP,EAAAQ,SAAAX,MAAH,yBAAA5D,EAAAwE,MAAAC,KAAAC,YAAA,GAsBd,OARAC,oBAAU,WACNvB,EAAQ,IACT,IAEHuB,oBAAU,WACNnB,KACD,CAACL,IAGA1C,EAAAC,EAAAC,cAACmE,EAAD,KACIrE,EAAAC,EAAAC,cAACiE,EAAD,CAAWtE,iBAAkB,SAACuE,GAAD,OAA0BzB,EAAQyB,IAAerE,WAAYA,EAAYH,WAlB7F,WACb+C,EAAQD,EAAO,IAiBiH/C,WAdnH,WACbgD,EAAQD,EAAO,IAauI5C,WAAY4C,EAAMnC,IAAK,kBAAmBb,MAAO,cAAYF,KAAMgF,EAAO/E,QAASA,MCbhOiF,EAZF,WACX,OACE1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,KACE3E,EAAAC,EAAAC,cAAC0E,EAAD,MACA5E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,KACI7E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAW9C,EAAO+C,KAAK,MACpChF,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAOC,OAAK,EAACC,UAAWR,EAAOS,KAAK,cCPjCC,EANO,WACrB,OACCjF,EAAAC,EAAAC,cAACgF,EAAD,OCOkBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.58e3453f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a8cd9446.svg\";","import { Grid } from \"@material-ui/core\"\nimport styled from \"styled-components\"\n\nexport const GridPanel = styled(Grid)`\n    background: white;\n    box-shadow: 60px -16px teal;\n`\n\nexport const GridTitle = styled.h1`\n    color: #494949;\n    font-weight: 600;\n    font-size: 18px;\n    font-family: \"Open Sans\";\n`\n\n\nexport const DatatableHeader = styled(Grid).attrs({ container: true })`\n    border: 1px solid #F0EFEF;\n    border-radius: 3px 3px 0px 0px;\n    background-color: #F0EFEF;\n    color: #545454;\n    font-style: normal;\n    font-variant-ligatures: normal;\n    font-variant-caps: normal;\n    font-variant-numeric: normal;\n    font-variant-east-asian: normal;\n    font-weight: bold;\n    font-stretch: normal;\n    font-family: \"Open Sans\";\n    font-size: 14px;\n`\n\nexport const DatatableRow = styled(Grid).attrs({ container: true })`\n    border: 1px solid #F0EFEF;\n    border-radius: 2px;\n    background-color: white;\n    color: #2B2B2B;\n    font-variant-ligatures: normal;\n    font-variant-caps: normal;\n    font-variant-numeric: normal;\n    font-variant-east-asian: normal;\n    font-stretch: normal;\n    font-family: \"Open Sans\";\n`\n\nexport const DatatableContainer = styled(Grid).attrs({ container: true })`\n    padding: 20px;\n    border: 1px solid #F0EFEF;\n    border-radius: 2px;\n    background-color: white;\n`\n\nexport const DatatableItem = styled(Grid).attrs({ item: true })`\n    padding: 10px;\n    font-size: 14px;\n`\n\nexport const Page = styled.span`\n    padding: 3px;\n    padding-left: 5px;\n    padding-right: 5px;\n    color: #2B2B2B;\n    cursor: pointer;\n`\n\nexport const PageSelected = styled(Page)`\n    border-color: #A3A3A3;\n    border: solid 2px;\n    border-radius: 3px;\n`","import React from \"react\"\nimport { DatatableContainer, DatatableRow, DatatableHeader, DatatableItem, GridTitle, Page, PageSelected } from \"./styles\"\n\ntype Column = {\n    key: string;\n    description: string;\n}\n\nexport type Props = {\n    data: any[]\n    columns: Column[];\n    title: string;\n    actualPage: number;\n    totalPages: number;\n    actionPrev: () => void;\n    actionNext: () => void;\n    actionSelectPage: (pageSelected: number) => void;\n}\n\nconst getItemSize = (size: number) => {\n    switch(size){\n        case 2:\n            return 6;\n        case 3: \n            return 4;\n        case 4:\n            return 3;\n        case 5:\n        case 6:\n            return 2;\n        default:\n            return 1\n    }\n}\n\nconst Datatable = ({ data, columns, title, actionPrev, actionNext, actionSelectPage, actualPage, totalPages }: Props) => {\n    return (\n        <DatatableContainer sm={12}>\n            <GridTitle>{title}</GridTitle>\n            <DatatableHeader>\n                {\n                    columns.map( (column, index) => {\n                        return (\n                            <DatatableItem key={index} sm={getItemSize(columns.length)}>\n                                {column.description}\n                            </DatatableItem>\n                        )\n                    })\n                }\n            </DatatableHeader>\n            {\n                data.map(( row, index ) => {\n                    return (\n                        <DatatableRow key={index}>\n                            {columns.map((column, index) => {\n                                return (\n                                    <DatatableItem key={index} sm={getItemSize(columns.length)}>\n                                        {row[column.key].length > 90 ? row[column.key].substring(0,90)+\"...\" : row[column.key]}\n                                    </DatatableItem>\n                                )\n                            })}\n                        </DatatableRow>\n                    )\n                })\n            }\n            <DatatableRow>\n                <DatatableItem style={{ color: \"#494949\", fontSize: 13 }} sm={10}>\n                    Exibindo {data.length} registros\n                </DatatableItem>\n                <DatatableItem style={{ color: \"#494949\", textAlign: \"right\" }} sm={2}>\n                    <Page style={{ color: actualPage === 1 ? \"#A3A3A3\": \"#2B2B2B\" }} onClick={() => {\n                        if(actualPage > 1){\n                            actionPrev()\n                        }\n                        }}> { \"<\" }</Page>\n                        {actualPage === totalPages - 1 && \n                            <Page onClick={() => actionSelectPage(actualPage-1)}>{actualPage -1}</Page>\n                        }\n                        {\n                            actualPage === totalPages &&\n                            <>\n                                <Page onClick={() => actionSelectPage(actualPage-2)}>{actualPage -2}</Page>\n                                <Page onClick={() => actionSelectPage(actualPage-1)}>{actualPage -1}</Page>\n                            </>\n                        }\n                        <PageSelected onClick={() => actionSelectPage(actualPage)}>{actualPage}</PageSelected>\n                        {\n                            actualPage < totalPages &&\n                            <Page onClick={() => actionSelectPage(actualPage+1)}>{actualPage +1}</Page>\n                        }\n                        \n                        {\n                            actualPage < totalPages -1 && \n                                <Page onClick={() => actionSelectPage(actualPage+2)}>{actualPage +2}</Page>\n                        }\n                    <Page style={{ color: actualPage === totalPages ? \"#A3A3A3\": \"#2B2B2B\" }} onClick={() => {\n                        if(actualPage < totalPages){\n                            actionNext()\n                        }\n                    }}> { \">\" }</Page>\n                </DatatableItem>\n            </DatatableRow>\n        </DatatableContainer>\n    )\n}\n\nexport default Datatable;","import styled from \"styled-components\"\nimport { Grid } from \"@material-ui/core\"\n\nexport const HeaderComponent = styled(Grid)`\n    width: 100%;\n    background-color: black;\n    height: 50px;\n    text-align: center;\n`\n\nexport const Logo = styled.img`\n    max-height: 50px;\n    width: auto;\n    margin-top: 10px;\n`","import React from \"react\"\nimport { HeaderComponent, Logo } from \"./styles\"\nimport logoMoovin from \"../../Images/logo.svg\"\nconst Header = () => {\n    return (\n        <HeaderComponent sm={12}>\n            <Logo src={logoMoovin}>\n            </Logo>\n        </HeaderComponent>\n    )\n}\n\nexport default Header;","import styled from \"styled-components\"\n\nexport const PostsContainer = styled.div`\n    padding: 10px;\n`","import Axios from \"axios\"\n\nconst api = Axios.create({baseURL:\"https://gorest.co.in/public-api/\"})\n\nexport default api;","import React, { useEffect, useState } from \"react\"\nimport { PostsContainer } from \"./styles\"\nimport { Datatable } from \"../../Components\"\nimport api from \"../../Services/api\"\nconst columns = [{description:\"Titulo\", key: \"title\"}, {description:\"Conteúdo\", key: \"body\"}];\n\nconst Posts = () => {\n    const [posts, setPosts] = useState([]);\n    const [page, setPage] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n    \n    const getPosts = async () => {\n        const response = await api.get(\"posts?page=\"+page);\n        setPosts(response.data.data)\n        setTotalPages(response.data.meta.pagination.pages)\n    }\n\n    const nextPage = () => {\n        setPage(page + 1);\n    }\n\n    const prevPage = () => {\n        setPage(page - 1);\n    }\n\n    useEffect(() => {\n        setPage(1);\n    }, [])\n\n    useEffect(() => {\n        getPosts()\n    }, [page])\n\n    return (\n        <PostsContainer>\n            <Datatable actionSelectPage={(pageSelected: number) => setPage(pageSelected)} totalPages={totalPages} actionNext={nextPage} actionPrev={prevPage} actualPage={page} key={\"datatable\"} title={\"Últimas postagens\"} data={posts} columns={columns} ></Datatable>\n        </PostsContainer>\n    )\n}\n\nexport default Posts;","import styled from \"styled-components\"\n\nexport const UsersContainer = styled.div`\n    padding: 10px;\n`","import React, { useState, useEffect } from \"react\"\nimport { UsersContainer } from \"./styles\"\nimport { Datatable } from \"../../Components\"\nimport api from \"../../Services/api\"\nconst columns = [{description:\"Nome\", key: \"name\"}, {description:\"E-mail\", key: \"email\"}, { description: \"Situação\", key: \"status\" }];\n\nconst Users = () => {\n    const [users, setUsers] = useState([]);\n    const [page, setPage] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n    \n    const getPosts = async () => {\n        const response = await api.get(\"users?page=\"+page);\n        setUsers(response.data.data)\n        setTotalPages(response.data.meta.pagination.pages)\n    }\n\n    const nextPage = () => {\n        setPage(page + 1);\n    }\n\n    const prevPage = () => {\n        setPage(page - 1);\n    }\n\n    useEffect(() => {\n        setPage(1);\n    }, [])\n\n    useEffect(() => {\n        getPosts()\n    }, [page])\n\n    return (\n        <UsersContainer>\n            <Datatable actionSelectPage={(pageSelected: number) => setPage(pageSelected)} totalPages={totalPages} actionNext={nextPage} actionPrev={prevPage} actualPage={page} key={\"datatable-users\"} title={\"Usuários\"} data={users} columns={columns} ></Datatable>\n        </UsersContainer>\n    )\n}\n\nexport default Users;","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { Header } from \"./Components\"\nimport { Posts, Users } from \"./Pages\"\n\nconst Routes = () => {\n    return (\n      <Router>\n        <Header></Header>\n        <Switch>\n            <Route exact component={Posts} path=\"/\" />\n            <Route exact component={Users} path=\"/Users\" />\n        </Switch>\n      </Router>\n    );\n  };\n  \n  export default Routes;","import React from 'react'\nimport './App.scss'\nimport Routes from \"./routes\"\nconst App: React.FC = () => {\n\treturn (\n\t\t<Routes></Routes>\n\t)\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}